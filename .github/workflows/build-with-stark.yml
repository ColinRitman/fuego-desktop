name: Build Fuego Wallet with STARK CLI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            package_manager: apt
            qt_version: "5.15"
          - os: macos-latest
            package_manager: brew
            qt_version: "5.15"
          - os: windows-latest
            package_manager: choco
            qt_version: "5.15"

    steps:
    - name: Checkout Fuego Wallet
      uses: actions/checkout@v4
      with:
        submodules: recursive
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Checkout STARK CLI
      uses: actions/checkout@v4
      with:
        repository: colinritman/xfgwin
        path: xfgwin
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Build STARK CLI
      run: |
        cd xfgwin
        cargo build --bin xfg-stark-cli --release
        ls -la target/release/xfg-stark-cli

    - name: Setup Qt (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y qt5-default qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools
        sudo apt-get install -y libboost-all-dev cmake build-essential

    - name: Setup Qt (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install qt@5 boost cmake

    - name: Setup Qt (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        choco install qt5 boost cmake

    - name: Build Fuego Wallet
      run: |
        mkdir build
        cd build
        cmake -DCMAKE_BUILD_TYPE=Release ..
        make -j$(nproc)

    - name: Test STARK CLI Integration
      run: |
        cd build
        ./xfg-stark-cli --help
        chmod +x auto_stark_proof.sh
        ./auto_stark_proof.sh --test

    - name: Create Release Package
      if: github.event_name == 'release'
      run: |
        cd build
        make package
        ls -la *.deb *.dmg *.zip

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: fuego-wallet-${{ matrix.os }}
        path: build/*.deb build/*.dmg build/*.zip build/fuegowallet build/xfg-stark-cli
