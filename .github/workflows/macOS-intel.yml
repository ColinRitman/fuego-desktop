name: macOS Intel

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

jobs:
  build-macos-intel:
    name: macOS Intel
    runs-on: macos-13  # Intel runner
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew install boost qt@5

      - name: Clone fuego
        run: |
          rm -rf cryptonote
          git clone https://github.com/colinritman/fuego.git cryptonote

      - name: Download STARK CLI from colinritman/xfgwin release
        run: |
          # Get the latest release info
          RELEASE_URL=$(curl -s https://api.github.com/repos/ColinRitman/xfgwin/releases/latest | jq -r '.assets[] | select(.name=="xfg-stark-cli-macos.tar.gz") | .browser_download_url')
          
          echo "Downloading STARK CLI from: $RELEASE_URL"
          
          # Download and extract the binary
          curl -L -o xfg-stark-cli-macos.tar.gz "$RELEASE_URL"
          tar -xzf xfg-stark-cli-macos.tar.gz
          
          # Make binary executable
          chmod +x xfg-stark-cli
          
          # Verify the binary works
          ./xfg-stark-cli --version
          
          echo "âœ… STARK CLI downloaded and verified successfully"

      - name: Build
        id: build
        run: |
          export PATH="/usr/local/opt/qt@5/bin:$PATH"
          build_folder="build/release"
          xfg_ver=$(echo ${{ github.ref }} | sed 's|refs/tags/||')
          release_name="fuego-desktop-macOS-intel-v$xfg_ver"
          app_name="Fuego-Wallet.app"

          # Clean up any existing CMake cache files
          rm -f CMakeCache.txt CMakeCache.txt.*
          rm -rf build/
          
          # Build using CMake (main project, not cryptonote subdirectory)
          mkdir -p build/release
          cd build/release
          cmake ../..
          make -j4
          cd ../..
          
          cd build/release
          macdeployqt "$app_name"
          cpack
          mkdir "$release_name"
          mkdir -p "$release_name/tools"
          mv *.dmg "$release_name".dmg
          # Include STARK CLI in release
          cp ../../xfg-stark-cli "$release_name/tools/"
          cp ../../download-stark-cli.sh "$release_name/tools/"
          cp ../../scripts/auto_stark_proof.sh "$release_name/tools/"
          cp ../../STARK_CLI_INTEGRATION_OPTIMIZATION.md "$release_name/"
          zip "$release_name".zip "$release_name".dmg "$release_name/tools" "$release_name/STARK_CLI_INTEGRATION_OPTIMIZATION.md"
          sha256=$(shasum -a 256 "$release_name".zip | awk '{ print toupper($1) }')

          echo "sha256=${sha256}" >> $GITHUB_OUTPUT
          echo "release_name=${release_name}.zip" >> $GITHUB_OUTPUT
          echo "asset_path=build/release/${release_name}.zip" >> $GITHUB_OUTPUT
          echo "xfg_version=${xfg_version}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v4
        with:
          files: ${{ steps.build.outputs.asset_path }}
          name: Fuego Desktop v${{ steps.build.outputs.xfg_ver }}
          body: |
            <img src="https://cdn-icons-png.flaticon.com/512/882/882602.png" width="16"> [Download for macOS Intel](../../releases/download/${{ steps.build.outputs.xfg_ver }}/${{ steps.build.outputs.release_name }}) ${{ steps.build.outputs.release_name }}
            `SHA256 : ${{ steps.build.outputs.sha256 }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
