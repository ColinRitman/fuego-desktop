name: Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build-linux:
    name: Build Linux
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools qttools5-dev qttools5-dev-tools libqt5charts5-dev libboost-all-dev build-essential cmake

      - name: Setup cryptonote submodule
        run: |
          rm -rf cryptonote
          git clone https://github.com/colinritman/fuego.git cryptonote

      - name: Download STARK CLI from colinritman/xfgwin release
        run: |
          # Get the latest release info
          RELEASE_URL=$(curl -s https://api.github.com/repos/ColinRitman/xfgwin/releases/latest | jq -r '.assets[] | select(.name=="xfg-stark-cli-linux.tar.gz") | .browser_download_url')
          
          echo "Downloading STARK CLI from: $RELEASE_URL"
          
          # Download and extract the binary
          curl -L -o xfg-stark-cli-linux.tar.gz "$RELEASE_URL"
          tar -xzf xfg-stark-cli-linux.tar.gz
          
          # Make binary executable
          chmod +x xfg-stark-cli
          
          # Verify the binary works
          ./xfg-stark-cli --version
          
          echo "✅ STARK CLI downloaded and verified successfully"

      - name: Build
        run: |
          export PATH="/usr/lib/x86_64-linux-gnu/qt5/bin:$PATH"
          xfg_version=$(echo "$GITHUB_REF" | sed 's|refs/tags/v||')
          release_name=fuego-desktop-ubuntu-22.04-v"$xfg_version"
          make -j$(nproc) build-release
          mkdir $release_name
          mkdir -p $release_name/icon
          mkdir -p $release_name/tools
          mv build/release/Fuego-Wallet $release_name
          cp fuego-desktop.desktop $release_name
          cp src/images/fuego.png $release_name/icon
          # Include STARK CLI in release
          cp xfg-stark-cli $release_name/tools/
          cp download-stark-cli.sh $release_name/tools/
          cp scripts/auto_stark_proof.sh $release_name/tools/
          cp STARK_CLI_INTEGRATION_OPTIMIZATION.md $release_name/
          tar -czf "$release_name".tar.gz "$release_name"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-release
          path: fuego-desktop-ubuntu-22.04-v*.tar.gz

  build-macos:
    name: Build macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          brew install qt@5 boost cmake
          export PATH="/usr/local/opt/qt@5/bin:$PATH"

      - name: Setup cryptonote submodule
        run: |
          rm -rf cryptonote
          git clone https://github.com/colinritman/fuego.git cryptonote

      - name: Download STARK CLI from colinritman/xfgwin release
        run: |
          # Get the latest release info
          RELEASE_URL=$(curl -s https://api.github.com/repos/ColinRitman/xfgwin/releases/latest | jq -r '.assets[] | select(.name=="xfg-stark-cli-macos.tar.gz") | .browser_download_url')
          
          echo "Downloading STARK CLI from: $RELEASE_URL"
          
          # Download and extract the binary
          curl -L -o xfg-stark-cli-macos.tar.gz "$RELEASE_URL"
          tar -xzf xfg-stark-cli-macos.tar.gz
          
          # Make binary executable
          chmod +x xfg-stark-cli
          
          # Verify the binary works
          ./xfg-stark-cli --version
          
          echo "✅ STARK CLI downloaded and verified successfully"

      - name: Build
        run: |
          export PATH="/usr/local/opt/qt@5/bin:$PATH"
          xfg_version=$(echo "$GITHUB_REF" | sed 's|refs/tags/v||')
          release_name=fuego-desktop-macOS-v"$xfg_version"
          qmake Fuego-GUI.pro
          make -j$(sysctl -n hw.ncpu)
          mkdir $release_name
          mkdir -p $release_name/tools
          mv Fuego-Wallet.app $release_name
          # Include STARK CLI in release
          cp xfg-stark-cli $release_name/tools/
          cp download-stark-cli.sh $release_name/tools/
          cp scripts/auto_stark_proof.sh $release_name/tools/
          cp STARK_CLI_INTEGRATION_OPTIMIZATION.md $release_name/
          tar -czf "$release_name".tar.gz "$release_name"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-release
          path: fuego-desktop-macOS-v*.tar.gz

  build-windows:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          choco install qt-sdk boost --version=1.72.0 cmake -y
          echo "C:\Qt\5.15.2\msvc2019_64\bin" >> $GITHUB_PATH
          echo "C:\Program Files\Boost\lib64-msvc-14.2" >> $GITHUB_PATH

      - name: Setup cryptonote submodule
        run: |
          Remove-Item -Recurse -Force cryptonote -ErrorAction SilentlyContinue
          git clone https://github.com/colinritman/fuego.git cryptonote

      - name: Download STARK CLI from colinritman/xfgwin release
        run: |
          # Get the latest release info
          $releaseInfo = Invoke-RestMethod -Uri "https://api.github.com/repos/ColinRitman/xfgwin/releases/latest"
          $downloadUrl = ($releaseInfo.assets | Where-Object { $_.name -eq "xfg-stark-cli-windows.tar.gz" }).browser_download_url
          
          Write-Host "Downloading STARK CLI from: $downloadUrl"
          
          # Download and extract the binary
          Invoke-WebRequest -Uri $downloadUrl -OutFile "xfg-stark-cli-windows.tar.gz"
          
          # Extract using tar (available in Windows 10+)
          tar -xzf xfg-stark-cli-windows.tar.gz
          
          # Verify the binary works
          .\xfg-stark-cli.exe --version
          
          Write-Host "✅ STARK CLI downloaded and verified successfully"

      - name: Build
        run: |
          xfg_version=$(echo "$GITHUB_REF" | sed 's|refs/tags/v||')
          release_name=fuego-desktop-windows-v"$xfg_version"
          qmake Fuego-GUI.pro "CONFIG+=release"
          nmake -f Makefile.Release
          mkdir $release_name
          mkdir $release_name\tools
          mv release/Fuego-Wallet.exe $release_name
          # Include STARK CLI in release
          copy xfg-stark-cli.exe $release_name\tools\
          copy download-stark-cli.sh $release_name\tools\
          copy scripts\auto_stark_proof.sh $release_name\tools\
          copy STARK_CLI_INTEGRATION_OPTIMIZATION.md $release_name\
          powershell Compress-Archive -Path "$release_name" -DestinationPath "$release_name.zip"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-release
          path: fuego-desktop-windows-v*.zip

  create-release:
    name: Create Release
    needs: [build-linux, build-macos, build-windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List artifacts
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*/*
          fail_on_unmatched_files: true
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}