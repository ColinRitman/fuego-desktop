name: macOS Wallet Only

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-macos-wallet-only:
    runs-on: macos-14
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Clone fuego
      run: |
        echo "🔄 Starting fresh clone of fuego repository..."
        rm -rf cryptonote cryptonote-temp
        echo "📥 Cloning from ColinRitman/fuego master branch..."
        git clone --branch master --depth 1 https://github.com/ColinRitman/fuego.git cryptonote-temp
        mv cryptonote-temp cryptonote
        echo "📋 Verifying cloned repository..."
        git -C cryptonote log --oneline -3
        echo "Current cryptonote commit: $(git -C cryptonote rev-parse HEAD)"

    - name: Install dependencies
      run: |
        # Install dependencies
        brew install libqrencode miniupnpc qt@5
        
        # Install system Boost as fallback
        brew install boost

    - name: Fix compilation errors
      run: |
        # Fix serialization issues
        sed -i '' 's/value\.serialize(serializer);/serializer(value);/g' cryptonote/src/Serialization/SerializationOverloads.h
        
        # Fix parallel hashmap issues
        sed -i '' 's/raw_hash_set/flat_hash_set/g' cryptonote/external/parallel_hashmap/phmap_dump.h

    - name: Build Fuego Wallet
      run: |
        # Create build directory
        mkdir -p build/release
        cd build/release
        
        # Configure with CMake
        cmake -DCMAKE_BUILD_TYPE=Release \
              -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \
              -DCMAKE_OSX_ARCHITECTURES=arm64 \
              -DQt5_DIR=/opt/homebrew/opt/qt@5/lib/cmake/Qt5 \
              -DCMAKE_PREFIX_PATH=/opt/homebrew/opt/qt@5 \
              -DBOOST_ROOT=/opt/homebrew/opt/boost \
              -DBoost_INCLUDE_DIR=/opt/homebrew/opt/boost/include \
              -DBoost_LIBRARY_DIR=/opt/homebrew/opt/boost/lib \
              ../..
        
        # Build
        cmake --build . --parallel $(nproc)
        
        # Verify the app bundle was created
        if [ ! -d "FuegoWallet.app" ]; then
          echo "❌ FuegoWallet.app bundle not found!"
          echo "Contents of build directory:"
          ls -la
          exit 1
        elif [ ! -f "FuegoWallet.app/Contents/MacOS/FuegoWallet" ]; then
          echo "❌ FuegoWallet executable not found in app bundle!"
          echo "Contents of FuegoWallet.app:"
          find FuegoWallet.app -type f
          exit 1
        else
          echo "✅ FuegoWallet.app bundle created successfully"
        fi

    - name: Bundle and sign app
      run: |
        cd build/release
        
        # Set variables
        app_name="Fuego Wallet.app"
        release_name="FuegoWallet-macOS-$(date +%Y%m%d-%H%M%S)"
        
        # Rename the existing app bundle
        mv FuegoWallet.app "$app_name"
        
        # Copy Qt frameworks
        echo "📦 Copying Qt frameworks..."
        cp -R /opt/homebrew/opt/qt@5/lib/QtCore.framework "$app_name/Contents/Frameworks/"
        cp -R /opt/homebrew/opt/qt@5/lib/QtGui.framework "$app_name/Contents/Frameworks/"
        cp -R /opt/homebrew/opt/qt@5/lib/QtWidgets.framework "$app_name/Contents/Frameworks/"
        cp -R /opt/homebrew/opt/qt@5/lib/QtNetwork.framework "$app_name/Contents/Frameworks/"
        cp -R /opt/homebrew/opt/qt@5/lib/QtCharts.framework "$app_name/Contents/Frameworks/"
        
        # Copy Boost libraries
        echo "📦 Copying Boost libraries..."
        cp /opt/homebrew/lib/libboost_program_options.dylib "$app_name/Contents/Frameworks/"
        cp /opt/homebrew/lib/libboost_filesystem.dylib "$app_name/Contents/Frameworks/"
        cp /opt/homebrew/lib/libboost_chrono.dylib "$app_name/Contents/Frameworks/"
        cp /opt/homebrew/lib/libboost_atomic.dylib "$app_name/Contents/Frameworks/"
        cp /opt/homebrew/lib/libboost_thread.dylib "$app_name/Contents/Frameworks/"
        cp /opt/homebrew/lib/libboost_serialization.dylib "$app_name/Contents/Frameworks/"
        cp /opt/homebrew/lib/libboost_date_time.dylib "$app_name/Contents/Frameworks/"
        cp /opt/homebrew/lib/libboost_regex.dylib "$app_name/Contents/Frameworks/"
        
        # Copy other dependencies
        cp /opt/homebrew/lib/libminiupnpc.dylib "$app_name/Contents/Frameworks/"
        
        # Fix library paths
        echo "🔧 Fixing library paths..."
        install_name_tool -change /opt/homebrew/opt/qt@5/lib/QtCore.framework/Versions/5/QtCore @executable_path/../Frameworks/QtCore.framework/Versions/5/QtCore "$app_name/Contents/MacOS/FuegoWallet"
        install_name_tool -change /opt/homebrew/opt/qt@5/lib/QtGui.framework/Versions/5/QtGui @executable_path/../Frameworks/QtGui.framework/Versions/5/QtGui "$app_name/Contents/MacOS/FuegoWallet"
        install_name_tool -change /opt/homebrew/opt/qt@5/lib/QtWidgets.framework/Versions/5/QtWidgets @executable_path/../Frameworks/QtWidgets.framework/Versions/5/QtWidgets "$app_name/Contents/MacOS/FuegoWallet"
        install_name_tool -change /opt/homebrew/opt/qt@5/lib/QtNetwork.framework/Versions/5/QtNetwork @executable_path/../Frameworks/QtNetwork.framework/Versions/5/QtNetwork "$app_name/Contents/MacOS/FuegoWallet"
        install_name_tool -change /opt/homebrew/opt/qt@5/lib/QtCharts.framework/Versions/5/QtCharts @executable_path/../Frameworks/QtCharts.framework/Versions/5/QtCharts "$app_name/Contents/MacOS/FuegoWallet"
        
        # Fix Boost library paths
        install_name_tool -change /opt/homebrew/lib/libboost_program_options.dylib @executable_path/../Frameworks/libboost_program_options.dylib "$app_name/Contents/MacOS/FuegoWallet"
        install_name_tool -change /opt/homebrew/lib/libboost_filesystem.dylib @executable_path/../Frameworks/libboost_filesystem.dylib "$app_name/Contents/MacOS/FuegoWallet"
        install_name_tool -change /opt/homebrew/lib/libboost_chrono.dylib @executable_path/../Frameworks/libboost_chrono.dylib "$app_name/Contents/MacOS/FuegoWallet"
        install_name_tool -change /opt/homebrew/lib/libboost_atomic.dylib @executable_path/../Frameworks/libboost_atomic.dylib "$app_name/Contents/MacOS/FuegoWallet"
        install_name_tool -change /opt/homebrew/lib/libboost_thread.dylib @executable_path/../Frameworks/libboost_thread.dylib "$app_name/Contents/MacOS/FuegoWallet"
        install_name_tool -change /opt/homebrew/lib/libboost_serialization.dylib @executable_path/../Frameworks/libboost_serialization.dylib "$app_name/Contents/MacOS/FuegoWallet"
        install_name_tool -change /opt/homebrew/lib/libboost_date_time.dylib @executable_path/../Frameworks/libboost_date_time.dylib "$app_name/Contents/MacOS/FuegoWallet"
        install_name_tool -change /opt/homebrew/lib/libboost_regex.dylib @executable_path/../Frameworks/libboost_regex.dylib "$app_name/Contents/MacOS/FuegoWallet"
        
        # Fix other library paths
        install_name_tool -change /opt/homebrew/lib/libminiupnpc.dylib @executable_path/../Frameworks/libminiupnpc.dylib "$app_name/Contents/MacOS/FuegoWallet"
        
        # Create Info.plist
        echo "📝 Creating Info.plist..."
        cat > "$app_name/Contents/Info.plist" << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleExecutable</key>
            <string>FuegoWallet</string>
            <key>CFBundleIdentifier</key>
            <string>com.fuego.wallet</string>
            <key>CFBundleName</key>
            <string>Fuego Wallet</string>
            <key>CFBundleDisplayName</key>
            <string>Fuego Wallet</string>
            <key>CFBundleVersion</key>
            <string>1.0.0</string>
            <key>CFBundleShortVersionString</key>
            <string>1.0.0</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
            <key>CFBundleSignature</key>
            <string>????</string>
            <key>CFBundleIconFile</key>
            <string>fuego</string>
            <key>LSMinimumSystemVersion</key>
            <string>11.0</string>
            <key>NSHighResolutionCapable</key>
            <true/>
            <key>NSRequiresAquaSystemAppearance</key>
            <false/>
        </dict>
        </plist>
        EOF
        
        # Basic ad-hoc code signing
        echo "🔐 Code signing the app bundle..."
        codesign --force --deep --sign - "$app_name"
        
        # Verify the signature
        codesign --verify --verbose "$app_name"
        
        # Test the application
        echo "🧪 Testing application..."
        timeout 10s "./$app_name/Contents/MacOS/FuegoWallet" --version || echo "App test completed"
        
        echo "📦 Minimal app bundle ready: $app_name"
        echo "release_name=${release_name}" >> $GITHUB_OUTPUT
        echo "artifact_path=build/release/$app_name" >> $GITHUB_OUTPUT

    - name: Upload Minimal App Bundle
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.build.outputs.release_name }}
        path: ${{ steps.build.outputs.artifact_path }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
