name: Build macOS App

on:
  push:
    branches: [ master, main ]
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
    
    - name: Install dependencies
      run: |
        brew update
        brew install boost@1.89 qt@5 qrencode miniupnpc cmake pkg-config
    
    - name: Set environment variables
      run: |
        echo "BOOST_ROOT=/opt/homebrew/opt/boost@1.89" >> $GITHUB_ENV
        echo "Qt5_DIR=/opt/homebrew/opt/qt@5/lib/cmake/Qt5" >> $GITHUB_ENV
        echo "CMAKE_PREFIX_PATH=/opt/homebrew/opt/qt@5" >> $GITHUB_ENV
    
    - name: Create build directory
      run: mkdir -p build
    
    - name: Fix compilation errors
      run: |
        # Fix serialization issues
        sed -i '' 's/value\.serialize(serializer);/serializer(value);/g' cryptonote/src/Serialization/SerializationOverloads.h
        
        # Fix parallel hashmap issues
        sed -i '' 's/raw_hash_set/flat_hash_set/g' cryptonote/external/parallel_hashmap/phmap_dump.h
        
        # Fix namespace closing brace
        sed -i '' 's/} \/\/ namespace CryptoNote/} \/\/ namespace CryptoNote/g' cryptonote/src/Serialization/SerializationOverloads.h

    - name: Configure CMake
      run: |
        cd build
        cmake .. \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_OSX_ARCHITECTURES=arm64 \
          -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \
          -DBoost_NO_BOOST_CMAKE=ON \
          -DBoost_ROOT=/opt/homebrew/opt/boost@1.89 \
          -DQt5_DIR=/opt/homebrew/opt/qt@5/lib/cmake/Qt5 \
          -DCMAKE_PREFIX_PATH=/opt/homebrew/opt/qt@5
    
    - name: Build application
      run: |
        cd build
        make -j$(sysctl -n hw.ncpu)
    
    - name: Bundle dependencies
      run: |
        cd build
        # Create a proper app bundle with all dependencies
        mkdir -p FuegoWallet.app/Contents/Frameworks
        mkdir -p FuegoWallet.app/Contents/Resources
        
        # Copy Qt frameworks
        cp -R /opt/homebrew/opt/qt@5/lib/QtCore.framework FuegoWallet.app/Contents/Frameworks/
        cp -R /opt/homebrew/opt/qt@5/lib/QtGui.framework FuegoWallet.app/Contents/Frameworks/
        cp -R /opt/homebrew/opt/qt@5/lib/QtWidgets.framework FuegoWallet.app/Contents/Frameworks/
        cp -R /opt/homebrew/opt/qt@5/lib/QtNetwork.framework FuegoWallet.app/Contents/Frameworks/
        cp -R /opt/homebrew/opt/qt@5/lib/QtCharts.framework FuegoWallet.app/Contents/Frameworks/
        
        # Copy Boost libraries
        cp /opt/homebrew/opt/boost@1.89/lib/libboost_program_options.dylib FuegoWallet.app/Contents/Frameworks/
        cp /opt/homebrew/opt/boost@1.89/lib/libboost_filesystem.dylib FuegoWallet.app/Contents/Frameworks/
        # In Boost 1.89, system library might be integrated into filesystem
        if [ -f /opt/homebrew/opt/boost@1.89/lib/libboost_system.dylib ]; then
          cp /opt/homebrew/opt/boost@1.89/lib/libboost_system.dylib FuegoWallet.app/Contents/Frameworks/
        else
          echo "Boost system library not found, using filesystem library as fallback"
          cp /opt/homebrew/opt/boost@1.89/lib/libboost_filesystem.dylib FuegoWallet.app/Contents/Frameworks/libboost_system.dylib
        fi
        cp /opt/homebrew/opt/boost@1.89/lib/libboost_chrono.dylib FuegoWallet.app/Contents/Frameworks/
        cp /opt/homebrew/opt/boost@1.89/lib/libboost_atomic.dylib FuegoWallet.app/Contents/Frameworks/
        cp /opt/homebrew/opt/boost@1.89/lib/libboost_thread.dylib FuegoWallet.app/Contents/Frameworks/
        cp /opt/homebrew/opt/boost@1.89/lib/libboost_serialization.dylib FuegoWallet.app/Contents/Frameworks/
        cp /opt/homebrew/opt/boost@1.89/lib/libboost_date_time.dylib FuegoWallet.app/Contents/Frameworks/
        cp /opt/homebrew/opt/boost@1.89/lib/libboost_regex.dylib FuegoWallet.app/Contents/Frameworks/
        
        # Copy other dependencies
        cp /opt/homebrew/lib/libqrencode.dylib FuegoWallet.app/Contents/Frameworks/
        cp /opt/homebrew/lib/libminiupnpc.dylib FuegoWallet.app/Contents/Frameworks/
    
    - name: Fix library paths
      run: |
        cd build
        # Use install_name_tool to fix library paths
        install_name_tool -change /opt/homebrew/opt/qt@5/lib/QtCore.framework/Versions/5/QtCore @executable_path/../Frameworks/QtCore.framework/Versions/5/QtCore FuegoWallet.app/Contents/MacOS/FuegoWallet
        install_name_tool -change /opt/homebrew/opt/qt@5/lib/QtGui.framework/Versions/5/QtGui @executable_path/../Frameworks/QtGui.framework/Versions/5/QtGui FuegoWallet.app/Contents/MacOS/FuegoWallet
        install_name_tool -change /opt/homebrew/opt/qt@5/lib/QtWidgets.framework/Versions/5/QtWidgets @executable_path/../Frameworks/QtWidgets.framework/Versions/5/QtWidgets FuegoWallet.app/Contents/MacOS/FuegoWallet
        install_name_tool -change /opt/homebrew/opt/qt@5/lib/QtNetwork.framework/Versions/5/QtNetwork @executable_path/../Frameworks/QtNetwork.framework/Versions/5/QtNetwork FuegoWallet.app/Contents/MacOS/FuegoWallet
        install_name_tool -change /opt/homebrew/opt/qt@5/lib/QtCharts.framework/Versions/5/QtCharts @executable_path/../Frameworks/QtCharts.framework/Versions/5/QtCharts FuegoWallet.app/Contents/MacOS/FuegoWallet
        
        # Fix Boost library paths
        install_name_tool -change /opt/homebrew/opt/boost@1.89/lib/libboost_program_options.dylib @executable_path/../Frameworks/libboost_program_options.dylib FuegoWallet.app/Contents/MacOS/FuegoWallet
        install_name_tool -change /opt/homebrew/opt/boost@1.89/lib/libboost_filesystem.dylib @executable_path/../Frameworks/libboost_filesystem.dylib FuegoWallet.app/Contents/MacOS/FuegoWallet
        # Handle missing system library
        if [ -f /opt/homebrew/opt/boost@1.89/lib/libboost_system.dylib ]; then
          install_name_tool -change /opt/homebrew/opt/boost@1.89/lib/libboost_system.dylib @executable_path/../Frameworks/libboost_system.dylib FuegoWallet.app/Contents/MacOS/FuegoWallet
        else
          install_name_tool -change /opt/homebrew/opt/boost@1.89/lib/libboost_filesystem.dylib @executable_path/../Frameworks/libboost_system.dylib FuegoWallet.app/Contents/MacOS/FuegoWallet
        fi
        install_name_tool -change /opt/homebrew/opt/boost@1.89/lib/libboost_chrono.dylib @executable_path/../Frameworks/libboost_chrono.dylib FuegoWallet.app/Contents/MacOS/FuegoWallet
        install_name_tool -change /opt/homebrew/opt/boost@1.89/lib/libboost_atomic.dylib @executable_path/../Frameworks/libboost_atomic.dylib FuegoWallet.app/Contents/MacOS/FuegoWallet
        install_name_tool -change /opt/homebrew/opt/boost@1.89/lib/libboost_thread.dylib @executable_path/../Frameworks/libboost_thread.dylib FuegoWallet.app/Contents/MacOS/FuegoWallet
        install_name_tool -change /opt/homebrew/opt/boost@1.89/lib/libboost_serialization.dylib @executable_path/../Frameworks/libboost_serialization.dylib FuegoWallet.app/Contents/MacOS/FuegoWallet
        install_name_tool -change /opt/homebrew/opt/boost@1.89/lib/libboost_date_time.dylib @executable_path/../Frameworks/libboost_date_time.dylib FuegoWallet.app/Contents/MacOS/FuegoWallet
        install_name_tool -change /opt/homebrew/opt/boost@1.89/lib/libboost_regex.dylib @executable_path/../Frameworks/libboost_regex.dylib FuegoWallet.app/Contents/MacOS/FuegoWallet
        
        # Fix other library paths
        install_name_tool -change /opt/homebrew/lib/libqrencode.dylib @executable_path/../Frameworks/libqrencode.dylib FuegoWallet.app/Contents/MacOS/FuegoWallet
        install_name_tool -change /opt/homebrew/lib/libminiupnpc.dylib @executable_path/../Frameworks/libminiupnpc.dylib FuegoWallet.app/Contents/MacOS/FuegoWallet
    
    - name: Create Info.plist
      run: |
        cd build
        cat > FuegoWallet.app/Contents/Info.plist << 'EOF'
        <?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
            <key>CFBundleExecutable</key>
            <string>FuegoWallet</string>
            <key>CFBundleIdentifier</key>
            <string>com.fuego.wallet</string>
            <key>CFBundleName</key>
            <string>FuegoWallet</string>
            <key>CFBundleVersion</key>
            <string>1.0.0</string>
            <key>CFBundleShortVersionString</key>
            <string>1.0.0</string>
            <key>CFBundlePackageType</key>
            <string>APPL</string>
            <key>CFBundleSignature</key>
            <string>????</string>
            <key>LSMinimumSystemVersion</key>
            <string>11.0</string>
            <key>NSHighResolutionCapable</key>
            <true/>
            <key>NSRequiresAquaSystemAppearance</key>
            <false/>
        </dict>
        </plist>
        EOF
    
    - name: Code sign application
      run: |
        cd build
        # Sign the app with adhoc signature
        codesign --force --deep --sign - FuegoWallet.app
        
        # Verify the signature
        codesign --verify --verbose FuegoWallet.app
    
    - name: Test application
      run: |
        cd build
        # Test that the app can start without crashing
        timeout 10s ./FuegoWallet.app/Contents/MacOS/FuegoWallet --version || echo "App test completed"
    
    - name: Create DMG
      run: |
        cd build
        # Create a DMG for distribution
        hdiutil create -volname "FuegoWallet" -srcfolder FuegoWallet.app -ov -format UDZO FuegoWallet.dmg
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: FuegoWallet-macOS
        path: |
          build/FuegoWallet.app
          build/FuegoWallet.dmg
        retention-days: 30
    
    - name: Upload to release (if tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          build/FuegoWallet.app
          build/FuegoWallet.dmg
        draft: false
        prerelease: false
